  TP1
  ---
util::win32::MakeRelativePath
Remove HAL
Remove Win32?
Remove Macintosh?
Allow GCOV-less "make tests" (for clang -fsanitize=thread)

  TP2
  ---
choralecd: Source renaming
choralecd: track vs folder icons in browse window

  1.0
  ---
choralecd: tooltips in browse window
liboutput: repeat/shuffle
libdb: GetRecord?
libimport: M3U
asynchronous db (for dbreceiver)
man pages (!)
more doxy comments
DVB-T recording conflicts
gateway UPnP server to Receiver clients
asynchronous stream (GetPollHandle) + sync-to-async wrapper for remote CD rip
  Problem here is that ripper will be doing WaitForReadable, but during async
    connect the right call is WaitForWritable. Return EWAITREAD/EWAITWRITE
      instead of EWOULDBLOCK? Or give Pollable itself a method Wait(Callback)?
        What if you're EWOULDBLOCK because you want to wait on a condition?
	  Scheduler should have WaitForEvent(const Callback&, Event*) where
	    Event is an HEVENT on Win32 and a pipe (or eventfd) on posix. But
              how does client of Stream know whether to wait on event or fd?
                Pollable having Wait(Scheduler&,Callback&) seems too coupled.
		  Pollable::GetEvent/GetPollHandle, where GPH also returns
		    direction?
Convert EncodingTask to PollableTask (wait for readability)
Rewrite http::Stream in terms of http::Client
Pass a name mapper to Synchronise for carv2/Jupiter (UTF8->Latin1)
Split out libcd (+libcdupnp) from libimport, find better name for what's left?
Writable db::local
Writable db::upnp
If Queue'd URLs refer to localhost, rewrite ITO IP as seen by target
Pool http::Clients
Fix dvb_recording test vs frontend retuning
Figure out how DVB icons and "DAB-like" messages work (DVB-SI?)
Finish libisam (move next)
Transfer-Encoding: chunked
Digest auth
Investigate shocking memory leak on CD rip!
Tag early and retag later only if needed
Allow streaming reads/writes of huge UPnP strings (StringSink?)

  2.0
  ---
NF2 genre
type=spoken (cf new Vibez implementation)
album art
more-homemade audio out (gapless, RG)
MSC sync
DAAP
internet radio (UPnP CDS v2)
i18n (gettext)

  Perhaps never
  -------------
libreceiverd: split RCF into separate content-factories
libutil: boost::asio instead of class Socket? (no, can't use ui::qt::Scheduler)
libutil: bind.h instead of Task::Run/OnActivity/OnTimer?
new empeg receiver distribution (freetype, ...)
Turn Stream/SeekableStream into BufferPtr factories?
