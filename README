	Chorale 0.09 (Technology Preview 9)
	-----------------------------------

How to build it:
    ./configure --prefix=/usr
    make
    sudo make install

What you get:
    choraled (background daemon)
      - Rio Receiver server
      - UPnP MediaRenderer server (experimental)
      - UPnP MediaServer server
      - Freeview PVR with EPG (very experimental)
      - CD server for network ripping
    choralecd (desktop application)
      - CD ripping (both locally and over the network)
      - Rio Receiver client
      - Media playback
      - UPnP MediaRenderer client
      - UPnP MediaServer client (experimental)

You also get a certain amount of Doxygen documentation ("make doc").


Configure problems
------------------

In many cases Chorale might not really need software versions quite as
new as the configure script demands. If you have older ones, try
fiddling with version numbers in configure.ac.

Some of the things that the configure script claims are optional,
aren't really optional yet. In all cases, optional dependencies cause
desirable features to be disabled if they aren't there; arranging for
them all to be found is definitely recommended.


Rio Receiver server
-------------------

This is a replacement for Audio Receiver Manager and/or receiverd. It
offers the following advantages over those packages:
  - Can be given both a directory tree of MP3s and a corresponding
    directory tree of FLACs, and knows to serve MP3s to real Rio
    Receivers but FLACs to car-player Receiver Edition or choralecd.
  - Automatically rescans the media library when it changes; no more
    manual updating or SIGHUP. (Though SIGHUP still works, just in
    case.)
  - If the server PC has any DVB-T receivers, the server will gateway
    Freeview radio stations to your Receivers. (Because Rio Receivers
    can't decode MP2, the stations will be transcoded to WAV.)

Unlike Audio Receiver Manager, choraled does not incorporate an NFS
server or a DHCP server. If you want to use choraled with real Rio
Receivers, you will need to arrange for them to be NFS-bootable; see
libreceiverd/README.


UPnP MediaRenderer server
-------------------------

This service is still incomplete. It doesn't yet support the
ConnectionManager service, which among other things means that control
points can't determine which audio formats it supports.

The audio formats it supports are the ones GStreamer does. In
particular, it only supports MP3 if your GStreamer installation does;
note that the gst-plugins-ugly package release version 0.10.6 (the
latest, at time of writing) has broken MP3 support, and you may
require a CVS snapshot of it instead. Or you could use the Fluendo MP3
support.

The audio outputs it shares are the ones Hal finds (unless you don't
have Hal installed at all, in which case you only get "hw:0,0"). On
some systems with two audio outputs "hw:0,0" and "hw:0,1", they are
separate physical audio outputs, and it makes sense to queue tracks on
each independently; on some, they are mixed together, so having two
queues doesn't make sense. It's not clear to me how to tell the
difference programmatically, so choraled always offers both audio
outputs. Similar considerations apply to choralecd's list of local
(non-UPnP) audio outputs.


CD ripping
----------

Ripping is done to both FLAC and MP3 simultaneously, in order to
produce parallel directories as expected by choraled. Note that you
can rip from multiple CD-ROM drives simultaneously -- though, if you
try this with two drives on the same IDE channel, it might end up
slower than ripping sequentially. Note also that you can start ripping
a new CD as soon as a finished one is ejected, whether or not the encoding
and tagging window is still open for the old one.

Once you click Done in a CD ripping window, you need to watch the
status bar of the main choralecd window to see when all the background
encoding tasks have finished and choralecd can be safely quit.

Because of problems in libcdio, choralecd DOES NOT WORK on (real) SCSI
CD-ROM drives. (IDE and SATA drives work fine even if they appear as
/dev/sr0 or /dev/scd0; it's only ones with actual SCSI connectors
which fail.)


Networked CD ripping
--------------------

The choralecd desktop application, offers CD ripping from CD drives in
other computers on the same network (if those computers are running
the choraled daemon, that is). This is, of course, slower than using
CD drives in the computer running choralecd -- but by less than you
might think. If you're thinking of doing this on a large scale, bear
in mind that saturating 10Mbit Ethernet corresponds to about 7x
ripping, 100Mbit about 70x.


Rio Receiver client
-------------------

This is still incomplete, and lacks most of the "soup" queries you
would expect. It is easiest to browse the server through the
"Playlists" item. Items (songs) can be dragged from the right-hand
pane, onto any audio output's set-list window.


Media playback
--------------

Opens a set-list, or running-order, for playback of audio files. Drag
tracks into the set-list window from a Receiver or MediaServer
explorer window. Click on a track in the set-list window and click the
play (">") button to play it.

This currently uses GStreamer, which by default uses the default ALSA
playback device, usually "plughw:0,0". Again, this means it only
supports the audio formats that your GStreamer installation does; see
"UPnP MediaRenderer server", above.


UPnP MediaRenderer client
-------------------------

As well as a set-list for local playback, choralecd lets you open a
set-list on any detected UPnP MediaRenderer device (tested with
choraled, GMediaRender, and the Roku Soundbridge media player).

Note that Rio Receiver servers can't negotiate content type, so that
if you're using choraled as a Receiver server, it will be serving you
FLACs where it can, which you won't be able to play on a Roku
Soundbridge.

GMediaRender doesn't support SetNextAVTransportURI, nor give any
indication when the currently-playing track has finished, so choralecd
can only tell it to play one file at a time.


UPnP MediaServer server
-----------------------

This is still incomplete, but there's enough of it there to use a Roku
Soundbridge with it in both Browse and Search mode, and to pass the
Intel UPnP A/V test suite. It offers both FLAC and MP3 <res> elements
where both formats exist on the server; Soundbridge, which can't play
FLAC, of course picks the MP3 one.

Like the Receiver server, the MediaServer server exposes available
Freeview radio stations to its clients. Again, the stations are
transcoded to WAV, as some clients can't decode MP2; UPnP allows
client and server to negotiate supported formats, but, sadly, only by
MIME type. RFC3003 assigns the same MIME type to MP2 and MP3, so
there's no way the server could tell that the client can't play MP2,
nor any way the client could tell that the station wasn't MP3.

The Freeview radio stations are exposed using the MediaServer v2
"TUNER" extension; if you know of any clients that take advantage of
this, let me know.


UPnP MediaServer client
-----------------------

As well as Receiver servers, choralecd will let you browse any
detected UPnP MediaServer device (tested with GMediaServer and
Microsoft Windows Media Connect). This is still very incomplete. Use
the "Playlists" item to browse the server's folder structure.


Freeview PVR with EPG
---------------------

If choraled detects DVB-T (Freeview) hardware, it offers recording
services -- currently, only through its web interface. The way to
access the web interface, is as the presentation page of the UPnP
device. Note that recordings are not currently transcoded, so radio
recordings will not play back on devices which can't play MP2.

Also note that, although it's capable of recording multiple channels
at once provided they're all on the same multiplex, there is NO
WARNING given if you attempt clashing recordings. And the list of
recordings to be made is currently NOT preserved over a daemon
restart. This probably makes DVB-T a curiosity/preview ONLY in this
version.
